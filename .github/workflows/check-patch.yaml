name: Tests

on: [push, pull_request]

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install requirements
      run: bash ./scripts/ci/install.sh
    - name: Check Patch
      run: ./scripts/ci/check_patch.sh

  tests:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up cache
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: ${{ runner.os }}-${ matrix.python-version }}-pip-

      - name: Ensure cache is healthy
        if: steps.cache-venv.outputs.cache-hit != 'true'
        shell: bash
        run: |
          python -m venv ./.venv && . ./.venv/bin/activate

      - name: Install Dependencies
        shell: bash
        run: bash ./scripts/ci/install.sh

      - name: Run Tests
        run: ./scripts/ci/script.sh
